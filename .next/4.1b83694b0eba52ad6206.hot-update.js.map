{"version":3,"file":"4.1b83694b0eba52ad6206.hot-update.js","sources":["webpack:///containers/ChatContainer.js"],"sourcesContent":["import React from 'react'\nimport MessageList from '../components/MessageList.js'\nimport MessageInput from '../components/MessageInput.js'\n\nclass ChatContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      messages: {}\n    }\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  onSubmit(data) {\n    // data is ab object that contains message and timestamp\n    // of user submitted message in MessageInput. Here is where the\n    // state should be updated by adding new messages to state and not\n    // erare previous state/messages. Could I use the ... spread operator?\n    this.setState({\n      messages: { data }\n    })\n  }\n  render() {\n    return (\n      <div>\n        <MessageList messages={this.state.messages}/>\n        <MessageInput onSubmit={this.onSubmit}/>\n      </div>\n    )\n  }\n}\n\nexport default ChatContainer\n\n\n\n// WEBPACK FOOTER //\n// containers/ChatContainer.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxBA;AACA;AA0BA;;;;A","sourceRoot":""}